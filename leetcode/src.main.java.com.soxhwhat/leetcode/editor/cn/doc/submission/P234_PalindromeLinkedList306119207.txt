/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        int n = 0;
        for(ListNode p = head; p != null; p = p.next) n ++;
        ListNode a = head;
        for(int i = 0; i < (n + 1) / 2 - 1; i ++) a = a.next;
        ListNode b = a.next;
        while(b != null){
            ListNode c = b.next;
            b.next = a;
            a = b;
            b = c;

        }
        b = head;
        ListNode tail = a;
        boolean res = true;
        for(int i = 0; i < n / 2; i++){
            if(a.val != b.val){
                res = false;
                break;
            }
            a = a.next;
            b = b.next;
        }
        return res;
    }
}

//runtime:4 ms
//memory:57.7 MB
