/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int LIMIT;
    public TreeNode sufficientSubset(TreeNode root, int limit) {
        LIMIT = limit;

        boolean flag = checkNode(root, 0);
        return flag ? root : null;
    }

    public boolean checkNode(TreeNode root, int sum) {
        if (root == null) return false;
        int temp = root.val + sum;
        if (root.left == null && root.right == null) return temp >= LIMIT;

        boolean leftFlag = checkNode(root.left, temp);
        boolean rightFlag = checkNode(root.right, temp);

        if (!leftFlag) root.left = null;
        if (!rightFlag) root.right = null;

        return leftFlag || rightFlag;
    }
}
//runtime:0 ms
//memory:42.8 MB
