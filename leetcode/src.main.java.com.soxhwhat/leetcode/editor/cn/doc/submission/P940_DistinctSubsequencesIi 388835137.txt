class Solution {
    public int distinctSubseqII(String s) {


        int n = s.length();
        int[] dp = new int[n + 1];
        dp[0] = 1;
        int[] last = new int[26];
        Arrays.fill(last, -1);
        final int MOD = (int) (1e9 + 7);
        for (int i = 1; i <= n; i++) {
            int t = s.charAt(i - 1) - 'a';
            dp[i] = dp[i - 1] * 2 % MOD;
            if (last[t] >= 0) dp[i] -= dp[last[t]];
            last[t] = i - 1;
        }
        dp[n]--;
        if (dp[n] < 0) dp[n] += MOD;
        return dp[n];


    }
}

//total_testcases:110
//total_correct:59
//input_formatted:"zchmliaqdgvwncfatcfivphddpzjkgyygueikthqzyeeiebczqbqhdytkoawkehkbizdmcnilcjjlpoeoqqoqpswtqdpvszfaksn"
//expected_output:97915677
//code_output:742540726
