    class Solution {
        public int[] threeEqualParts(int[] arr) {
            int sum = Arrays.stream(arr).sum();
            if (sum % 3 != 0) return new int[]{-1, -1};
            if (sum == 0) return new int[]{0, 2};
            int part = sum / 3;
            int s1 = 0, s2 = 0, s3 = 0, cur = 0;

            for (int i = 0; i < arr.length; i++) {
                if (arr[i] == 1){
                    if (cur == 0) s1 = i;
                    else if (cur == part) s2 = i;
                    else if (cur == part * 2) s3 = i;
                    cur ++;
                }
            }
            while (s3 < arr.length && arr[s1] == arr[s2] && arr[s2] == arr[s3]){
                s1 ++;
                s2 ++;
                s3 ++;
            }
            if (s3 == arr.length) return new int[]{s1 - 1, s2};
            return new int[]{-1, -1};
        }

    }

//runtime:5 ms
//memory:46.7 MB
